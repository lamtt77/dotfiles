{ config, pkgs, ... }:

{
  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;

  # Home Manager needs a bit of information about you and the
  # paths it should manage.
  home.username = "alam";
  home.homeDirectory = "/Users/alam";

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "21.03";

  nixpkgs.config.allowUnfree = true;

  home.packages = with pkgs; [
      # source-code-pro
      ansible
      asciinema
      aspell
      aspellDicts.en
      autojump
      awscli
      bash
      bat
      bfg-repo-cleaner
      borgbackup
      coreutils       # replace tools `du` so that `ranger` can call
      curl
      direnv
      docker
      dotnet-sdk_5
      emacs-all-the-icons-fonts
      emacsMacport
      fasd
      fd
      fish
      fzf
      gcc10
      gdb
      git
      gnupg
      gnutls
      go
      google-cloud-sdk
      htop
      jq
      kubectl
      links
      lua
      lynx
      macvim
      man-db
      minio
      ncdu
      neofetch
      neovim
      nmap
      nodejs
      nox
      openssh
      openssl
      packer
      perl
      pinentry_mac
      powershell
      python39
      ranger
      rclone
      restic
      ripgrep
      ruby
      silver-searcher
      speedtest-cli
      sqlite
      stow
      terraform
      tasksh
      taskwarrior
      tmux
      tmuxinator
      tldr
      tree
      unzip
      vagrant
      wget
      wireguard-go
      wireguard-tools
      xquartz
      yarn
      youtube-dl
      zsh

      # tiling windows manager
      # yabai
      # skhd
      # spacebar
  ];
}

